<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt" xmlns:local="local">
    <h3 style="font-family: monospace">Number of Failures: ${action.displayName}</h3>
    <div id="jckErrorsFailuresChartContainer" style="margin-right: 10pt"><canvas id='jckErrorsFailuresChart' width='600' height='600'></canvas></div>
    <h3 style="font-family: monospace">Number of Tests total: ${action.displayName}</h3>
    <div id="jckPassedChartContainer" style="margin-right: 10pt"><canvas id='jckPassedChart' width='600' height='600'></canvas></div>
    <h3 style="font-family: monospace">Regressions: ${action.displayName}</h3>
    <div id="jckRegressionsChartContainer" style="margin-right: 10pt"><canvas id='jckRegressionsChart' width='600' height='600'></canvas></div>
            <j:set var="jckReports" value="${action.chartData}" />
    <script type="text/javascript">var buildsMap = {};</script>
    <script type="text/javascript">
        // &lt;![CDATA[
        var data = {
        labels: [
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
        "${build.buildNameShortened}"<j:if test="${!status.last}">,</j:if>
        </j:forEach>
        ],
                datasets: [
                {
                label: "Error",
                        fillColor: "rgba(255,0,255,0.2)",
                        strokeColor: "rgba(255,0,255,1)",
                        pointColor: "rgba(255,0,255,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(255,0,255,1)",
                        data: [
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
            ${build.error}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                },
                {
                label: "Failed",
                        fillColor: "rgba(255,0,0,0.2)",
                        strokeColor: "rgba(255,0,0,1)",
                        pointColor: "rgba(255,0,0,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(255,0,0,1)",
                        data: [
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
            ${build.failed}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                }
                ]
        };
        var options = {
        bezierCurve: false,
                multiTooltipTemplate: "&lt;%= datasetLabel + \": \" + value %&gt;"
        };
        var ctx = document.getElementById("jckErrorsFailuresChart").getContext("2d");
        var jckErrorsChart = new Chart(ctx).Line(data, options);
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
        buildsMap["${build.buildNameShortened}"] = "${build.buildNumber}";
        </j:forEach>
        document.getElementById("jckErrorsFailuresChartContainer").onclick = function (evt) {
        var activePoints = jckErrorsChart.getPointsAtEvent(evt);
        window.open(buildsMap[activePoints[0].label] + "/java-reports", "_blank");
        };
        // ]]&gt;
    </script>
    <script type="text/javascript">
        // &lt;![CDATA[
        var data = {
        labels: [
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
        "${build.buildNameShortened}"<j:if test="${!status.last}">,</j:if>
        </j:forEach>
        ],
                datasets: [
                {
                label: "Tests total",
                        fillColor: "rgba(180,180,180,0.2)",
                        strokeColor: "rgba(180,180,180,1)",
                        pointColor: "rgba(180,180,180,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(180,180,180,1)",
                        data: [
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
            ${build.total}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                },
                {
                label: "Runned tests",
                        fillColor: "rgba(180,180,180,0.2)",
                        strokeColor: "rgba(180,180,180,1)",
                        pointColor: "rgba(180,180,180,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(180,180,180,1)",
                        data: [
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
            ${build.Run}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                }
                ]
        };
        var options = {
        bezierCurve: false,
                multiTooltipTemplate: "&lt;%= datasetLabel + \": \" + value %&gt;"
        };
        var ctx = document.getElementById("jckPassedChart").getContext("2d");
        var jckPassedChartTck = new Chart(ctx).Line(data, options);
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
        buildsMap["${build.buildNameShortened}"] = "${build.buildNumber}";
        </j:forEach>
        document.getElementById("jckPassedChartContainer").onclick = function (evt) {
        var activePoints = jckPassedChartTck.getPointsAtEvent(evt);
        window.open(buildsMap[activePoints[0].label] + "/java-reports", "_blank");
        };
        // ]]&gt;
    </script>
    <script type="text/javascript">
        // &lt;![CDATA[
        var data = {
        labels: [
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
        "${build.buildNameShortened}"<j:if test="${!status.last}">,</j:if>
        </j:forEach>
        ],
                datasets: [
                {
                label: "Improvements",
                        fillColor: "rgba(0,220,0,0.5)",
                        strokeColor: "rgba(0,220,0,0.8)",
                        highlightFill: "rgba(0,220,0,0.75)",
                        highlightStroke: "rgba(0,220,0,1)",
                        data: [
        <j:forEach var="build" items="${jckReports.improvements}" varStatus="status">
            ${build}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                },
                {
                label: "Regressions",
                        fillColor: "rgba(220,0,0,0.5)",
                        strokeColor: "rgba(220,0,0,0.8)",
                        highlightFill: "rgba(220,0,0,0.75)",
                        highlightStroke: "rgba(220,0,0,1)",
                        data: [
        <j:forEach var="build" items="${jckReports.regressions}" varStatus="status">
            ${build}<j:if test="${!status.last}">,</j:if>
        </j:forEach>
                        ]
                }
                ]
        };
        var options = {
        bezierCurve: false,
                multiTooltipTemplate: "&lt;%= datasetLabel + \": \" + value %&gt;"
        };
        var ctx = document.getElementById("jckRegressionsChart").getContext("2d");
        var jckRegressions = new Chart(ctx).Bar(data, options);
        document.getElementById("jckRegressionsChartContainer").onclick = function (evt) {
        <j:forEach var="build" items="${jckReports.reports}" varStatus="status">
        buildsMap["${build.buildNameShortened}"] = "${build.buildNumber}";
        </j:forEach>
        var activePoints = jckRegressions.getBarsAtEvent(evt);
        window.open(buildsMap[activePoints[0].label] + "/java-reports", "_blank");
        };
        // ]]&gt;
    </script>
</j:jelly>
